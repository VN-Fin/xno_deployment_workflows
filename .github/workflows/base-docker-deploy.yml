name: Docker Deploy Base

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      directory:
        required: false
        type: string
        default: "/home/deploy"

jobs:
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        run: |
          if [[ "${{ inputs.branch }}" == "deploy-dev" ]]; then
            echo "Deploying to ${{ secrets.SSH_DEV_HOST }} as ${{ secrets.SSH_DEV_USERNAME }} on branch ${{ inputs.branch }}"
            
            echo "${{ secrets.SSH_DEV_KEY }}" > private_key.pem
            chmod 600 private_key.pem
  
            ssh -o StrictHostKeyChecking=no -i private_key.pem -p 24700 ${{ secrets.SSH_DEV_HOST }}@${{ secrets.SSH_DEV_USERNAME }} << EOF
              set -e
              cd ${{ inputs.directory }} || mkdir -p ${{ inputs.directory }} && cd ${{ inputs.directory }}
  
              if [ ! -d .git ]; then
                git clone git@github.com:${{ github.repository }} .
              fi
  
              git fetch origin
              git checkout ${{ inputs.branch }}
              git pull origin ${{ inputs.branch }}
  
              source ~/.bashrc
              docker compose up -d --build
            EOF
          elif [[ "${{ inputs.branch }}" == "deploy-prod" ]]; then
            echo "Deploying to ${{ secrets.SSH_PROD_HOST }} as ${{ secrets.SSH_PROD_USERNAME }} on branch ${{ inputs.branch }}"
            
            echo "${{ secrets.SSH_PROD_KEY }}" > private_key.pem
            chmod 600 private_key.pem
  
            ssh -o StrictHostKeyChecking=no -i private_key.pem -p 24700 ${{ secrets.SSH_PROD_HOST }}@${{ secrets.SSH_PROD_USERNAME }} << EOF
              set -e
              cd ${{ inputs.directory }} || mkdir -p ${{ inputs.directory }} && cd ${{ inputs.directory }}
  
              if [ ! -d .git ]; then
                git clone git@github.com:${{ github.repository }} .
              fi
  
              git fetch origin
              git checkout ${{ inputs.branch }}
              git pull origin ${{ inputs.branch }}
  
              source ~/.bashrc
              docker compose up -d --build
            EOF
          else
            echo "Unknown branch: ${{ inputs.branch }}"
            exit 1
          fi
