name: Docker Deploy Base

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      directory:
        required: false
        type: string
        default: "/home/deploy"

jobs:
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest

    steps:
      - name: Determine SSH config
        id: config
        run: |
          if [[ "${{ inputs.branch }}" == "deploy-dev" ]]; then
            echo "host=${{ secrets.SSH_DEV_HOST }}" >> $GITHUB_OUTPUT
            echo "user=${{ secrets.SSH_DEV_USERNAME }}" >> $GITHUB_OUTPUT
            echo "key=${{ secrets.SSH_DEV_KEY }}" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.branch }}" == "deploy-prod" ]]; then
            echo "host=${{ secrets.SSH_PROD_HOST }}" >> $GITHUB_OUTPUT
            echo "user=${{ secrets.SSH_PROD_USERNAME }}" >> $GITHUB_OUTPUT
            echo "key=${{ secrets.SSH_PROD_KEY }}" >> $GITHUB_OUTPUT
          else
            echo "Unknown branch: ${{ inputs.branch }}"
            exit 1
          fi

      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ steps.config.outputs.host }}
          SSH_USER: ${{ steps.config.outputs.user }}
          SSH_KEY: ${{ steps.config.outputs.key }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem -p 24700 ${SSH_USER}@${SSH_HOST} << EOF
            set -e
            cd ${{ inputs.directory }} || mkdir -p ${{ inputs.directory }} && cd ${{ inputs.directory }}

            if [ ! -d .git ]; then
              git clone git@github.com:${{ github.repository }} .
            fi

            git fetch origin
            git checkout ${{ inputs.branch }}
            git pull origin ${{ inputs.branch }}

            source ~/.bashrc
            docker compose up -d --build
          EOF
